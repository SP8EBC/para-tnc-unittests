/*
 * http_client_rx_callback_test.cpp
 *
 *  Created on: Mar 19, 2022
 *      Author: mateusz
 */


extern "C" {


#include "stdperiph_stubs.h"
#include "other_stubs.h"
#include "http_client/http_client.h"
#include "http_client/http_client_rx_callback.h"
#include "http_client/http_client_headers.h"

}


#define BOOST_TEST_DYN_LINK
#define BOOST_TEST_MODULE HTTP_CLIENT_RX_CBK
#include <boost/test/unit_test.hpp>
#include <string>
#include <iostream>

#define HEADER_BUFFER_LN 64

/**
 *	HTTP code returned by the latest query. It is zeroed after each successful call to async
 *	function. This indicate that a request is currently in progress. Negative values means some
 *	non HTTP error, like communication timeout or response longer than expected
 */
//int16_t http_client_http_code = 0;
//
///**
// * Content lenght received from HTTP response headers or chunked encoding
// */
//uint16_t http_client_content_lenght = 0;
//
/////**
//// * Temporary buffer for processing
//// */
////char http_client_header_buffer[HEADER_BUFFER_LN];
//
/////**
//// * Index used to walk through 'http_client_header_buffer'
//// */
////uint8_t http_client_header_index = 0;
//
//uint16_t http_client_max_content_ln = 0;



/**
 *
 * HTTP/1.1 200
Content-Type: application/json;charset=UTF-8
Transfer-Encoding: chunked
Date: Sat, 19 Mar 2022 07:53:47 GMT
Keep-Alive: timeout=20
Connection: keep-alive

142
{"last_timestamp":1647676251,"number_of_measurements":20,"avg_temperature":-4.44444,"temperature_qf":"FULL","qnh":1035,"qnh_qf":"FULL","humidity":36,"humidity_qf":"NOT_AVALIABLE","direction":88,"average_speed":6.6,"gusts":8.36,"hour_gusts":9.24,"hour_max_average_speed":7.04,"hour_min_average_speed":4.84,"wind_qf":"FULL"}
0

 *
 *
 *
 */
const char * meteo_backend_response_one = 	"\x48\x54\x54\x50\x2f\x31\x2e\x31\x20\x32\x30\x30\x20\x0d\x0a\x43" \
											"\x6f\x6e\x74\x65\x6e\x74\x2d\x54\x79\x70\x65\x3a\x20\x61\x70\x70" \
											"\x6c\x69\x63\x61\x74\x69\x6f\x6e\x2f\x6a\x73\x6f\x6e\x3b\x63\x68" \
											"\x61\x72\x73\x65\x74\x3d\x55\x54\x46\x2d\x38\x0d\x0a\x54\x72\x61" \
											"\x6e\x73\x66\x65\x72\x2d\x45\x6e\x63\x6f\x64\x69\x6e\x67\x3a\x20" \
											"\x63\x68\x75\x6e\x6b\x65\x64\x0d\x0a\x44\x61\x74\x65\x3a\x20\x53" \
											"\x61\x74\x2c\x20\x31\x39\x20\x4d\x61\x72\x20\x32\x30\x32\x32\x20" \
											"\x30\x37\x3a\x35\x33\x3a\x34\x37\x20\x47\x4d\x54\x0d\x0a\x4b\x65" \
											"\x65\x70\x2d\x41\x6c\x69\x76\x65\x3a\x20\x74\x69\x6d\x65\x6f\x75" \
											"\x74\x3d\x32\x30\x0d\x0a\x43\x6f\x6e\x6e\x65\x63\x74\x69\x6f\x6e" \
											"\x3a\x20\x6b\x65\x65\x70\x2d\x61\x6c\x69\x76\x65\x0d\x0a\x0d\x0a" \
											"\x31\x34\x32\x0d\x0a\x7b\x22\x6c\x61\x73\x74\x5f\x74\x69\x6d\x65" \
											"\x73\x74\x61\x6d\x70\x22\x3a\x31\x36\x34\x37\x36\x37\x36\x32\x35" \
											"\x31\x2c\x22\x6e\x75\x6d\x62\x65\x72\x5f\x6f\x66\x5f\x6d\x65\x61" \
											"\x73\x75\x72\x65\x6d\x65\x6e\x74\x73\x22\x3a\x32\x30\x2c\x22\x61" \
											"\x76\x67\x5f\x74\x65\x6d\x70\x65\x72\x61\x74\x75\x72\x65\x22\x3a" \
											"\x2d\x34\x2e\x34\x34\x34\x34\x34\x2c\x22\x74\x65\x6d\x70\x65\x72" \
											"\x61\x74\x75\x72\x65\x5f\x71\x66\x22\x3a\x22\x46\x55\x4c\x4c\x22" \
											"\x2c\x22\x71\x6e\x68\x22\x3a\x31\x30\x33\x35\x2c\x22\x71\x6e\x68" \
											"\x5f\x71\x66\x22\x3a\x22\x46\x55\x4c\x4c\x22\x2c\x22\x68\x75\x6d" \
											"\x69\x64\x69\x74\x79\x22\x3a\x33\x36\x2c\x22\x68\x75\x6d\x69\x64" \
											"\x69\x74\x79\x5f\x71\x66\x22\x3a\x22\x4e\x4f\x54\x5f\x41\x56\x41" \
											"\x4c\x49\x41\x42\x4c\x45\x22\x2c\x22\x64\x69\x72\x65\x63\x74\x69" \
											"\x6f\x6e\x22\x3a\x38\x38\x2c\x22\x61\x76\x65\x72\x61\x67\x65\x5f" \
											"\x73\x70\x65\x65\x64\x22\x3a\x36\x2e\x36\x2c\x22\x67\x75\x73\x74" \
											"\x73\x22\x3a\x38\x2e\x33\x36\x2c\x22\x68\x6f\x75\x72\x5f\x67\x75" \
											"\x73\x74\x73\x22\x3a\x39\x2e\x32\x34\x2c\x22\x68\x6f\x75\x72\x5f" \
											"\x6d\x61\x78\x5f\x61\x76\x65\x72\x61\x67\x65\x5f\x73\x70\x65\x65" \
											"\x64\x22\x3a\x37\x2e\x30\x34\x2c\x22\x68\x6f\x75\x72\x5f\x6d\x69" \
											"\x6e\x5f\x61\x76\x65\x72\x61\x67\x65\x5f\x73\x70\x65\x65\x64\x22" \
											"\x3a\x34\x2e\x38\x34\x2c\x22\x77\x69\x6e\x64\x5f\x71\x66\x22\x3a" \
											"\x22\x46\x55\x4c\x4c\x22\x7d\x0d\x0a\x30\x0d\x0a\x0d\x0a\0\0\0\0";

/**
 *
 * HTTP/1.1 404
Content-Type: text/html;charset=utf-8
Content-Language: en
Content-Length: 754
Date: Sat, 19 Mar 2022 13:50:56 GMT
Keep-Alive: timeout=20
Connection: keep-alive

 *
 *<!doctype html><html lang="en"><head><title>HTTP Status 404 â Not Found</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style></head><body><h1>HTTP Status 404 â Not Found</h1><hr class="line" /><p><b>Type</b> Status Report</p><p><b>Message</b> Station with given name doesn&#39;t exist</p><p><b>Description</b> The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.</p><hr class="line" /><h3>Apache Tomcat/8.5.54 (Debian)</h3></body></html>
 *
 *
 */

const char * meteo_backend_404_response_content_ln =
		"\x48\x54\x54\x50\x2f\x31\x2e\x31\x20\x34\x30\x34\x20\x0d\x0a\x43" \
		"\x6f\x6e\x74\x65\x6e\x74\x2d\x54\x79\x70\x65\x3a\x20\x74\x65\x78" \
		"\x74\x2f\x68\x74\x6d\x6c\x3b\x63\x68\x61\x72\x73\x65\x74\x3d\x75" \
		"\x74\x66\x2d\x38\x0d\x0a\x43\x6f\x6e\x74\x65\x6e\x74\x2d\x4c\x61" \
		"\x6e\x67\x75\x61\x67\x65\x3a\x20\x65\x6e\x0d\x0a\x43\x6f\x6e\x74" \
		"\x65\x6e\x74\x2d\x4c\x65\x6e\x67\x74\x68\x3a\x20\x37\x35\x34\x0d" \
		"\x0a\x44\x61\x74\x65\x3a\x20\x53\x61\x74\x2c\x20\x31\x39\x20\x4d" \
		"\x61\x72\x20\x32\x30\x32\x32\x20\x31\x33\x3a\x35\x30\x3a\x35\x36" \
		"\x20\x47\x4d\x54\x0d\x0a\x4b\x65\x65\x70\x2d\x41\x6c\x69\x76\x65" \
		"\x3a\x20\x74\x69\x6d\x65\x6f\x75\x74\x3d\x32\x30\x0d\x0a\x43\x6f" \
		"\x6e\x6e\x65\x63\x74\x69\x6f\x6e\x3a\x20\x6b\x65\x65\x70\x2d\x61" \
		"\x6c\x69\x76\x65\x0d\x0a\x0d\x0a" \
		"\x3c\x21\x64\x6f\x63\x74\x79\x70\x65\x20\x68\x74\x6d\x6c\x3e\x3c" \
		"\x68\x74\x6d\x6c\x20\x6c\x61\x6e\x67\x3d\x22\x65\x6e\x22\x3e\x3c" \
		"\x68\x65\x61\x64\x3e\x3c\x74\x69\x74\x6c\x65\x3e\x48\x54\x54\x50" \
		"\x20\x53\x74\x61\x74\x75\x73\x20\x34\x30\x34\x20\xe2\x80\x93\x20" \
		"\x4e\x6f\x74\x20\x46\x6f\x75\x6e\x64\x3c\x2f\x74\x69\x74\x6c\x65" \
		"\x3e\x3c\x73\x74\x79\x6c\x65\x20\x74\x79\x70\x65\x3d\x22\x74\x65" \
		"\x78\x74\x2f\x63\x73\x73\x22\x3e\x62\x6f\x64\x79\x20\x7b\x66\x6f" \
		"\x6e\x74\x2d\x66\x61\x6d\x69\x6c\x79\x3a\x54\x61\x68\x6f\x6d\x61" \
		"\x2c\x41\x72\x69\x61\x6c\x2c\x73\x61\x6e\x73\x2d\x73\x65\x72\x69" \
		"\x66\x3b\x7d\x20\x68\x31\x2c\x20\x68\x32\x2c\x20\x68\x33\x2c\x20" \
		"\x62\x20\x7b\x63\x6f\x6c\x6f\x72\x3a\x77\x68\x69\x74\x65\x3b\x62" \
		"\x61\x63\x6b\x67\x72\x6f\x75\x6e\x64\x2d\x63\x6f\x6c\x6f\x72\x3a" \
		"\x23\x35\x32\x35\x44\x37\x36\x3b\x7d\x20\x68\x31\x20\x7b\x66\x6f" \
		"\x6e\x74\x2d\x73\x69\x7a\x65\x3a\x32\x32\x70\x78\x3b\x7d\x20\x68" \
		"\x32\x20\x7b\x66\x6f\x6e\x74\x2d\x73\x69\x7a\x65\x3a\x31\x36\x70" \
		"\x78\x3b\x7d\x20\x68\x33\x20\x7b\x66\x6f\x6e\x74\x2d\x73\x69\x7a" \
		"\x65\x3a\x31\x34\x70\x78\x3b\x7d\x20\x70\x20\x7b\x66\x6f\x6e\x74" \
		"\x2d\x73\x69\x7a\x65\x3a\x31\x32\x70\x78\x3b\x7d\x20\x61\x20\x7b" \
		"\x63\x6f\x6c\x6f\x72\x3a\x62\x6c\x61\x63\x6b\x3b\x7d\x20\x2e\x6c" \
		"\x69\x6e\x65\x20\x7b\x68\x65\x69\x67\x68\x74\x3a\x31\x70\x78\x3b" \
		"\x62\x61\x63\x6b\x67\x72\x6f\x75\x6e\x64\x2d\x63\x6f\x6c\x6f\x72" \
		"\x3a\x23\x35\x32\x35\x44\x37\x36\x3b\x62\x6f\x72\x64\x65\x72\x3a" \
		"\x6e\x6f\x6e\x65\x3b\x7d\x3c\x2f\x73\x74\x79\x6c\x65\x3e\x3c\x2f" \
		"\x68\x65\x61\x64\x3e\x3c\x62\x6f\x64\x79\x3e\x3c\x68\x31\x3e\x48" \
		"\x54\x54\x50\x20\x53\x74\x61\x74\x75\x73\x20\x34\x30\x34\x20\xe2" \
		"\x80\x93\x20\x4e\x6f\x74\x20\x46\x6f\x75\x6e\x64\x3c\x2f\x68\x31" \
		"\x3e\x3c\x68\x72\x20\x63\x6c\x61\x73\x73\x3d\x22\x6c\x69\x6e\x65" \
		"\x22\x20\x2f\x3e\x3c\x70\x3e\x3c\x62\x3e\x54\x79\x70\x65\x3c\x2f" \
		"\x62\x3e\x20\x53\x74\x61\x74\x75\x73\x20\x52\x65\x70\x6f\x72\x74" \
		"\x3c\x2f\x70\x3e\x3c\x70\x3e\x3c\x62\x3e\x4d\x65\x73\x73\x61\x67" \
		"\x65\x3c\x2f\x62\x3e\x20\x53\x74\x61\x74\x69\x6f\x6e\x20\x77\x69" \
		"\x74\x68\x20\x67\x69\x76\x65\x6e\x20\x6e\x61\x6d\x65\x20\x64\x6f" \
		"\x65\x73\x6e\x26\x23\x33\x39\x3b\x74\x20\x65\x78\x69\x73\x74\x3c" \
		"\x2f\x70\x3e\x3c\x70\x3e\x3c\x62\x3e\x44\x65\x73\x63\x72\x69\x70" \
		"\x74\x69\x6f\x6e\x3c\x2f\x62\x3e\x20\x54\x68\x65\x20\x6f\x72\x69" \
		"\x67\x69\x6e\x20\x73\x65\x72\x76\x65\x72\x20\x64\x69\x64\x20\x6e" \
		"\x6f\x74\x20\x66\x69\x6e\x64\x20\x61\x20\x63\x75\x72\x72\x65\x6e" \
		"\x74\x20\x72\x65\x70\x72\x65\x73\x65\x6e\x74\x61\x74\x69\x6f\x6e" \
		"\x20\x66\x6f\x72\x20\x74\x68\x65\x20\x74\x61\x72\x67\x65\x74\x20" \
		"\x72\x65\x73\x6f\x75\x72\x63\x65\x20\x6f\x72\x20\x69\x73\x20\x6e" \
		"\x6f\x74\x20\x77\x69\x6c\x6c\x69\x6e\x67\x20\x74\x6f\x20\x64\x69" \
		"\x73\x63\x6c\x6f\x73\x65\x20\x74\x68\x61\x74\x20\x6f\x6e\x65\x20" \
		"\x65\x78\x69\x73\x74\x73\x2e\x3c\x2f\x70\x3e\x3c\x68\x72\x20\x63" \
		"\x6c\x61\x73\x73\x3d\x22\x6c\x69\x6e\x65\x22\x20\x2f\x3e\x3c\x68" \
		"\x33\x3e\x41\x70\x61\x63\x68\x65\x20\x54\x6f\x6d\x63\x61\x74\x2f" \
		"\x38\x2e\x35\x2e\x35\x34\x20\x28\x44\x65\x62\x69\x61\x6e\x29\x3c" \
		"\x2f\x68\x33\x3e\x3c\x2f\x62\x6f\x64\x79\x3e\x3c\x2f\x68\x74\x6d" \
		"\x6c\x3e";

const char * meteo_backend_disconnect_response =
		"\x48\x54\x54\x50\x2f\x31\x2e\x31\x20\x34\x30\x34\x20\x0d\x0a\x43" \
		"\x6f\x6e\x74\x65\x6e\x74\x2d\x54\x79\x70\x65\x3a\x20\x74\x65\x78" \
		"\x74\x2f\x68\x74\x6d\x6c\x3b\x63\x68\x61\x72\x73\x65\x74\x3d\x75" \
		"\x74\x66\x2d\x38\x0d\x0a\x43\x6f\x6e\x74\x65\x6e\x74\x2d\x4c\x61" \
		"\x6e\x67\x75\x61\x67\x65\x3a\x20\x65\x6e\x0d\x0a\x43\x6f\x6e\x74" \
		"\x65\x6e\x74\x2d\x4c\x65\x6e\x67\x74\x68\x3a\x20\x37\x35\x34\x0d" \
		"\x0a\x44\x61\x74\x65\x3a\x20\x53\x61\x74\x2c\x20\x31\x39\x20\x4d" \
		"\x61\x72\x20\x32\x30\x32\x32\x20\x31\x33\x3a\x35\x30\x3a\x35\x36" \
		"\x20\x47\x4d\x54\x0d\x0a\x4b\x65\x65\x70\x2d\x41\x6c\x69\x76\x65" \
		"\x3a\x20\x74\x69\x6d\x65\x6f\x75\x74\x3d\x32\x30\x0d\x0a\x43\x6f" \
		"\x6e\x6e\x65\x63\x74\x69\x6f\x6e\x3a\x20\x6b\x65\x65\x70\x2d\x61" \
		"\x6c\x69\x76\x65\x0d\x0a\x0d\\CLOSED\0\0";

struct fixture {
	fixture() {
		//;
		http_client_http_code = 0;
		http_client_content_lenght = 0;
		http_client_content_start_index = 0;
		http_client_rx_done_callback_init();
	}
};

BOOST_FIXTURE_TEST_CASE(test_one, fixture) {

	int len = strlen(meteo_backend_response_one);

	uint8_t output = 0;

	bool success = false;

	for (int i = 0; i < len; i++) {
		output = http_client_rx_done_callback(*(meteo_backend_response_one + i), reinterpret_cast<const uint8_t*>(meteo_backend_response_one), i);

		if (output > 0) {
			success =true;

			break;
		}
	}

	BOOST_CHECK_EQUAL(200, http_client_http_code);
	BOOST_CHECK_EQUAL(322, http_client_content_lenght);
	BOOST_CHECK_EQUAL(true, success);
	BOOST_CHECK_EQUAL(181, http_client_content_start_index);

	BOOST_CHECK_EQUAL('{', *(meteo_backend_response_one + http_client_content_start_index));
}

BOOST_FIXTURE_TEST_CASE(test_404_error, fixture) {

	int len = strlen(meteo_backend_404_response_content_ln);

	bool success = false;

	uint8_t output = 0;

	for (int i = 0; i < len; i++) {
		output = http_client_rx_done_callback(*(meteo_backend_404_response_content_ln + i), reinterpret_cast<const uint8_t*>(meteo_backend_404_response_content_ln), i);

		if (output > 0) {
			success =true;

			break;
		}
	}

	BOOST_CHECK_EQUAL(true, success);
	BOOST_CHECK_EQUAL(404, http_client_http_code);
	BOOST_CHECK_EQUAL(754, http_client_content_lenght);
}

BOOST_FIXTURE_TEST_CASE(test_disconnected, fixture) {
	int len = strlen(meteo_backend_disconnect_response);

	bool success = false;

	uint8_t output = 0;

	for (int i = 0; i < len; i++) {
		output = http_client_rx_done_callback(*(meteo_backend_disconnect_response + i), reinterpret_cast<const uint8_t*>(meteo_backend_disconnect_response), i);

		if (output > 0) {
			success =true;

			break;
		}
	}

	BOOST_CHECK_EQUAL(true, success);
	BOOST_CHECK_EQUAL(HTTP_CLIENT_DISCONNECTED, http_client_http_code);
}

BOOST_AUTO_TEST_CASE(headers_fist) {
	char buffer[256];

	char * url = "/meteo_backend/status";

	memset(buffer, 0x00, 256);

	uint16_t result = 0;

	result = http_client_headers_preamble(HTTP_GET, url, strlen(url), buffer, 256);
	result = http_client_headers_user_agent(buffer, 256, result);
	result = http_client_headers_accept(buffer, 256, result);
	result = http_client_headers_terminate(buffer, 256, result);

	BOOST_CHECK_EQUAL(false, result == 0);



}
